<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Yao John</title>
    <link>/tags/docker/</link>
    <description>Recent content in Docker on Yao John</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows-Docker-安装Centos系统</title>
      <link>/post/2022/11/30/windows-docker-%E5%AE%89%E8%A3%85centos%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/2022/11/30/windows-docker-%E5%AE%89%E8%A3%85centos%E7%B3%BB%E7%BB%9F/</guid>
      <description>windows docker 安装centOS系统 （1) 拉取镜像 输入命令docker pull centos:7 从仓库拉取centos7的镜像
（2) 查看本地镜像 命令：docker images
可以查看已经把centos的镜像拉取到本地
&amp;lt;div class=&amp;#34;figure&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;/post/2022/11/30/windows-docker-%E5%AE%89%E8%A3%85centos%E7%B3%BB%E7%BB%9F/index_files/figure-html/1.png&amp;#34; alt=&amp;#34;A fancy pie chart.&amp;#34; width=&amp;#34;672&amp;#34; /&amp;gt; &amp;lt;p class=&amp;#34;caption&amp;#34;&amp;gt;Figure 1: A fancy pie chart.&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; （3) 创建并运行容器 命令：docker run -d -i -t 470671670cac /bin/bash
命令格式：docker run -d -i -t &amp;lt;IMAGE ID&amp;gt; /bin/bash
执行完命令后，在命令下方会出现容器ID。
（4) 进入使用容器 命令：docker exec -it 82d5f bash
在此处容器的ID只输入前5位，系统会自动识别容器ID
命令格式：docker exec -it &amp;lt;CONTAINER ID&amp;gt; bash
（5) 安装工具 输入ifconfig命令查看网卡信息，系统找不到
输入命令安装：yum install -y net-tools</description>
    </item>
    
    <item>
      <title>Windows下Docker安装Anaconda</title>
      <link>/post/2022/11/30/windows%E4%B8%8Bdocker%E5%AE%89%E8%A3%85anaconda/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/2022/11/30/windows%E4%B8%8Bdocker%E5%AE%89%E8%A3%85anaconda/</guid>
      <description>Windows下Docker安装Anaconda docker是一个开源的应用容器引擎，你可以简单地把它理解为虚拟机（其实和虚拟机还是有区别的）。不管你的电脑是windows，linux还是mac，只要使用相同的docker镜像运行一个容器，就可以在容器中运行你的程序，不必担心依赖和兼容性问题。
安装docker的步骤不是本文的重点，可以参考网络上其它教程。windows电脑可能需要开启hyper-v，并且有可能需要在bios中启用虚拟化技术，或者需要安装vbox等虚拟机软件。
配置Docker-Desktop环境 控制面板&amp;ndash;&amp;gt;程序&amp;ndash;&amp;gt;启用Windows功能&amp;ndash;&amp;gt;打开hyper-v和适用于Liunx的Windows子系统功能重启电脑
Docker
选择Windows操作系统的安装包下载并安装，可能会涉及到重启电脑
拉取anaconda镜像到本地 安装好docker并确认服务启动后
在powershell命令行下直接运行如下命令就可以基于官方的anaconda3镜像实例化一个本地容器：
docker run -it --name=&amp;#34;anaconda&amp;#34; -p 8888:8888 continuumio/anaconda3 /bin/bash 参数-it是启用交互式终端，--name=&amp;quot;anaconda&amp;quot;是给容器起名字（只要你记得住，可以换成别的名字），-p 8888:8888是将容器的8888端口映射到本地的8888端口，便于访问jupyter。
docker会自动从docker hub下载最新的anaconda3镜像并创建容器，之后你就进入容器中了。在容器中，运行如下命令安装jupyter笔记本
conda install -c conda-forge jupyterlab 启动jupyter lab： 在docker-desktop中选择anaconda容器并运行 点击容器图标，进入命令行，执行如下命令 cd ~ jupyter lab --ip=&amp;#39;*&amp;#39; --port=8888 --no-browser --allow-root 然后你应该能看到类似 [I 13:37:11.236 LabApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). [C 13:37:11.239 LabApp] To access the notebook, open this file in a browser: file:///root/.</description>
    </item>
    
  </channel>
</rss>
