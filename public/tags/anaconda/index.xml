<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anaconda on Yao John</title>
    <link>/tags/anaconda/</link>
    <description>Recent content in Anaconda on Yao John</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/anaconda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows下Docker安装Anaconda</title>
      <link>/post/2022/11/30/windows%E4%B8%8Bdocker%E5%AE%89%E8%A3%85anaconda/</link>
      <pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/2022/11/30/windows%E4%B8%8Bdocker%E5%AE%89%E8%A3%85anaconda/</guid>
      <description>Windows下Docker安装Anaconda docker是一个开源的应用容器引擎，你可以简单地把它理解为虚拟机（其实和虚拟机还是有区别的）。不管你的电脑是windows，linux还是mac，只要使用相同的docker镜像运行一个容器，就可以在容器中运行你的程序，不必担心依赖和兼容性问题。
安装docker的步骤不是本文的重点，可以参考网络上其它教程。windows电脑可能需要开启hyper-v，并且有可能需要在bios中启用虚拟化技术，或者需要安装vbox等虚拟机软件。
配置Docker-Desktop环境 控制面板&amp;ndash;&amp;gt;程序&amp;ndash;&amp;gt;启用Windows功能&amp;ndash;&amp;gt;打开hyper-v和适用于Liunx的Windows子系统功能重启电脑
Docker
选择Windows操作系统的安装包下载并安装，可能会涉及到重启电脑
拉取anaconda镜像到本地 安装好docker并确认服务启动后
在powershell命令行下直接运行如下命令就可以基于官方的anaconda3镜像实例化一个本地容器：
docker run -it --name=&amp;#34;anaconda&amp;#34; -p 8888:8888 continuumio/anaconda3 /bin/bash 参数-it是启用交互式终端，--name=&amp;quot;anaconda&amp;quot;是给容器起名字（只要你记得住，可以换成别的名字），-p 8888:8888是将容器的8888端口映射到本地的8888端口，便于访问jupyter。
docker会自动从docker hub下载最新的anaconda3镜像并创建容器，之后你就进入容器中了。在容器中，运行如下命令安装jupyter笔记本
conda install -c conda-forge jupyterlab 启动jupyter lab： 在docker-desktop中选择anaconda容器并运行 点击容器图标，进入命令行，执行如下命令 cd ~ jupyter lab --ip=&amp;#39;*&amp;#39; --port=8888 --no-browser --allow-root 然后你应该能看到类似 [I 13:37:11.236 LabApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation). [C 13:37:11.239 LabApp] To access the notebook, open this file in a browser: file:///root/.</description>
    </item>
    
  </channel>
</rss>
